# 定义检测语言的函数
function detect_lang(){


  [ -d $SOURCE_DIR ] && play_confs=$(cd $SOURCE_DIR; find . -wholename "*/conf/application.conf" ! -wholename "*modules*" -type f)

  [ -d $SOURCE_DIR ] && goident=`find "$SOURCE_DIR" -type f -name '*.go'`

  [ -f $SOURCE_DIR/LANGUAGE ] && jar=`grep java-jar $SOURCE_DIR/LANGUAGE`

  if [[ -f $SOURCE_DIR/Dockerfile ]];then
    echo "docker"
  elif [[ -f $SOURCE_DIR/requirements.txt  ||  -f $SOURCE_DIR/setup.py ]]; then
    echo "Python"
  elif [ -f $SOURCE_DIR/Gemfile ]; then
    echo "Ruby"
  elif [[ -f $SOURCE_DIR/composer.json || -n $(find $SOURCE_DIR -maxdepth 2 -name "index.php") ]]; then
    echo "PHP"
  elif [ -f $SOURCE_DIR/pom.xml ]; then
   echo "Java-maven"
  elif [ -f $SOURCE_DIR/*.war ];then
    echo "Java-war"
  elif [ "$jar" == "java-jar" ];then
    echo "Java-jar"
  elif [ -f $SOURCE_DIR/package.json ]; then
    echo "Node.js"
  elif [[ -f $SOURCE_DIR/index.html || -f $SOURCE_DIR/index.htm ]];then
    echo "static"
  elif [ -f $SOURCE_DIR/project.clj ]; then
    echo "Clojure" 
  elif [ "$goident" != "" ];then
    echo "Go"
  elif [ -f $SOURCE_DIR/build.gradle ]; then
    echo "Gradle"
  elif [ -n "$play_confs" ] && [ ! -f "$SOURCE_DIR/project/Build.scala" ] && [ ! -f "$SOURCE_DIR/build.sbt" ]; then
    echo "Play!"
  elif [ -d $SOURCE_DIR/grails-app ]; then
   echo "Grails"
  elif detect_sbt $SOURCE_DIR ; then
    echo "Scala"
  elif [[ ! -d $SOURCE_DIR || `ls -1 $SOURCE_DIR | wc -l` -eq 0 ]];then
    echo  "no"
  else
    echo "false"
  fi
}
