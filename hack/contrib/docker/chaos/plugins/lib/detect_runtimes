# 检查运行时版本函数
# Input: 语言类型
# Output: 版本   默认值：*
function detect_runtimes(){
  lang=`echo $1 |tr A-Z a-z`
  case $lang in
  "php")
    if [ -f $SOURCE_DIR/composer.json ];then
      runtimes=`$JQBIN '.require.php' $SOURCE_DIR/composer.json`
      [ "$runtimes" != "null" ] && echo "true" || echo "false"
    else
      echo "false"
    fi
  ;;
  "python")
    if [ -f $SOURCE_DIR/runtime.txt ];then
      runtimes=`grep -i python $SOURCE_DIR/runtime.txt | grep -E -o "[0-9]+(.[0-9]+)?(.[0-9]+)?"`
      [  "$runtimes" != "" ] && echo "true" || echo "false"
    else
      echo "false"
    fi
  ;;
  "ruby")
#    if [ -f $SOURCE_DIR/Gemfile ];then
#      runtimes=`grep -E -i "^\ *ruby" $SOURCE_DIR/Gemfile | grep -E -o "[0-9]+(.[0-9]+)?(.[0-9]+)?"`
#      [ "$runtimes" != "" ] && echo "true" || echo "false"
#    else
#      echo "false"
#    fi
     echo "true"
  ;;
  "java-war|java-maven")
    if [ -f $SOURCE_DIR/system.properties ];then
      runtimes=`grep -i "java.runtime.version" $SOURCE_DIR/system.properties | grep  -E -o "[0-9]+(.[0-9]+)?(.[0-9]+)?"`
      [ "$runtimes" != "" ] && echo "true" || echo "false"
    else
      echo "false"
    fi
  ;;
  "node.js")
    if [ -f $SOURCE_DIR/package.json ] ;then
      runtimes=`$JQBIN '.engines.node' $SOURCE_DIR/package.json`
      [ "$runtimes" != "null" ] && echo "true" || echo "false"
    else
      echo "false"
    fi
  ;;
  "*")
    echo "false";;
  esac
}
