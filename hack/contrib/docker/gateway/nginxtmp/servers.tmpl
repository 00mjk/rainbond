server {
    {{ if .Server.Listen }}listen    {{.Server.Listen}};{{ end }}
    {{ if .Server.Root }}root    {{.Server.Root}};{{ end }}
    {{ if .Server.ServerName }}server_name    {{.Server.ServerName}};{{end}}
	{{ if .Server.DefaultType }}default_type    {{.Server.DefaultType}};{{end}}
    {{ if .Server.Charset }}charset   {{.Server.Charset}};{{end}}
    access_log off;
    {{ if gt .Server.KeepaliveTimeout.Num 0 }}
    keepalive_timeout {{.Server.KeepaliveTimeout.Num}}{{.Server.KeepaliveTimeout.Unit}};
    {{ end }}

    {{ if .Server.ServerTokens }}server_tokens on;{{ end }}

    {{ if .Server.SSLCertificate }}
    # ssl
    ssl_certificate {{.Server.SSLCertificate}};
    {{ end }}
    {{ if .Server.SSLCertificateKey }}ssl_certificate_key {{.Server.SSLCertificateKey}};{{ end }}

    {{ if .Server.ClientMaxBodySize.Unit }}
    client_max_body_size {{.Server.ClientMaxBodySize.Num}}{{.Server.ClientMaxBodySize.Unit}};
    {{ end }}
    {{ if .Server.ChunkedTransferEncoding }}
    chunked_transfer_encoding on;
    {{ end }}

    {{ range $rewrite := .Server.Rewrites }}
    rewrite {{$rewrite.Regex}} {{$rewrite.Replacement}}{{if $rewrite.Flag }} {{$rewrite.Flag}}{{ end }};
    {{ end }}

    {{ if ne .Server.Return.Code 0 }}
    return {{ .Server.Return.Code }} {{ if .Server.Return.Text}} "{{ .Server.Return.Text }}" {{ else if .Server.Return.URL }} {{.Server.Return.URL}} {{ end }};
    {{ end }}

    {{ if gt .Server.ProxyConnectTimeout.Num 0 }}
    proxy_connect_timeout   {{.Server.ProxyConnectTimeout.Num}}{{.Server.ProxyConnectTimeout.Unit}};
    {{ end }}
    {{ if gt .Server.ProxyTimeout.Num 0 }}
    proxy_timeout   {{.Server.ProxyTimeout.Num}}{{.Server.ProxyTimeout.Unit}};
    {{ end }}
    {{ if .Server.ProxyPass }}
    proxy_pass {{.Server.ProxyPass}};
    {{ end }}

    {{ range $loc := .Server.Locations }}
    location {{$loc.Path}} {
        {{ range $rewrite := $loc.Rewrite.Rewrites }}
        rewrite {{$rewrite.Regex}} {{$rewrite.Replacement}}{{if $rewrite.Flag }} {{$rewrite.Flag}}{{ end }};
        {{ end }}

        {{ range $k, $v := $loc.Proxy.SetHeaders }}
        proxy_set_header    {{$k}}    {{$v}};
        {{ end }}
        proxy_connect_timeout                   {{ $loc.Proxy.ConnectTimeout }}s;
        proxy_send_timeout                      {{ $loc.Proxy.SendTimeout }}s;
        proxy_read_timeout                      {{ $loc.Proxy.ReadTimeout }}s;

        proxy_buffering                         {{ $loc.Proxy.ProxyBuffering }};
        proxy_buffer_size                       {{ $loc.Proxy.BufferSize }};
        proxy_buffers                           {{ $loc.Proxy.BuffersNumber }} {{ $loc.Proxy.BufferSize }};
        proxy_request_buffering                 {{ $loc.Proxy.RequestBuffering }};

        proxy_http_version                      1.1;

        proxy_cookie_domain                     {{ $loc.Proxy.CookieDomain }};
        proxy_cookie_path                       {{ $loc.Proxy.CookiePath }};

        client_max_body_size        {{ $loc.Proxy.BodySize }}m;

        {{ if $loc.DisableAccessLog }}
        access_log off;
        {{ else if $loc.AccessLogPath }}
        access_log $loc.AccessLogPath porxy;
        {{ end }}
        
        {{ if $loc.ProxyRedirect }}
        proxy_redirect {{$loc.ProxyRedirect}};
        {{ end }}
        {{ if not $loc.DisableProxyPass }}
            set $target 'default';
            {{ if $.Server.OptionValue }}
                {{range $i, $v := $.Server.OptionValue}}
                    set ${{$i}} '{{$v}}';
                {{end}}
            {{ end }}
            {{ buildLuaHeaderRouter $loc }}
            {{ if $loc.PathRewrite }}
              proxy_pass http://upstream_balancer/;
            {{ else }}
              proxy_pass http://upstream_balancer;
            {{ end }}
        {{ end }}
        log_by_lua_block {
            balancer.log()
            {{ if $loc.EnableMetrics }}
            monitor.call()
            {{ end }}
        }
        {{ if $loc.Return.Code }}
        return {{$loc.Return.Code}} {{$loc.Return.Text}} {{$loc.Return.URL}};
        {{ end }}
    }
    {{ end }}
}